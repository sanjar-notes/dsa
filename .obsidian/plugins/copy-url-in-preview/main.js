/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var v=Object.defineProperty;var y=Object.getOwnPropertyDescriptor;var b=Object.getOwnPropertyNames;var k=Object.prototype.hasOwnProperty;var A=(a,r)=>{for(var e in r)v(a,e,{get:r[e],enumerable:!0})},L=(a,r,e,n)=>{if(r&&typeof r=="object"||typeof r=="function")for(let t of b(r))!k.call(a,t)&&t!==e&&v(a,t,{get:()=>r[t],enumerable:!(n=y(r,t))||n.enumerable});return a};var F=a=>L(v({},"__esModule",{value:!0}),a);var U={};A(U,{default:()=>E});module.exports=F(U);var s=require("obsidian");var x=5e3;function S(a,r){let e=new Promise((n,t)=>{let o=setTimeout(()=>{clearTimeout(o),t(`timed out after ${a} ms`)},a)});return Promise.race([r,e])}async function g(a){return S(x,(()=>new Promise((e,n)=>{let t=new Image;t.crossOrigin="anonymous",t.onload=()=>{let o=document.createElement("canvas");o.width=t.width,o.height=t.height,o.getContext("2d").drawImage(t,0,0),o.toBlob(l=>{e(l)})},t.onerror=async()=>{try{await fetch(t.src,{mode:"no-cors"});let o=await g(`https://api.allorigins.win/raw?url=${encodeURIComponent(a)}`);e(o)}catch(o){n()}},t.src=a}))())}function d(a,r,e,n,t){return a.on(r,e,n,t),()=>a.off(r,e,n,t)}var T=require("obsidian"),M={pdfMenu:!0},f=class extends T.PluginSettingTab{constructor(e,n){super(e,n);this.plugin=n}display(){let{containerEl:e}=this;e.empty(),e.createEl("h3",{text:"Image Context Menus settings"}),new T.Setting(e).setName("PDF context menu").addToggle(n=>{n.setValue(this.plugin.settings.pdfMenu).onChange(t=>{this.plugin.settings.pdfMenu=t,this.plugin.saveSettings()})})}};var C="/_capacitor_file_",D=1800,W=500,H=6e4,w=100,P=5e3,E=class extends s.Plugin{constructor(){super(...arguments);this.longTapTimeoutId=null}async loadSettings(){this.settings=Object.assign({},M,await this.loadData())}async saveSettings(){this.saveData(this.settings)}async onload(){await this.loadSettings(),this.addSettingTab(new f(this.app,this)),this.registerDocument(document),this.app.workspace.on("window-open",(e,n)=>{this.registerDocument(n.document)})}registerDocument(e){this.register(d(e,"mouseover",".pdf-embed iframe, .pdf-embed div.pdf-container, .workspace-leaf-content[data-type=pdf]",this.showOpenPdfMenu.bind(this))),this.register(d(e,"mousemove",".pdf-canvas",this.showOpenPdfMenu.bind(this))),s.Platform.isDesktop?(this.register(d(e,"contextmenu","img",this.onClickImage.bind(this))),this.register(d(e,"mouseover",".cm-link, .cm-hmd-internal-link",this.storeLastHoveredLinkInEditor.bind(this))),this.register(d(e,"mouseover","a.internal-link",this.storeLastHoveredLinkInPreview.bind(this)))):(this.register(d(e,"touchstart","img",this.startWaitingForLongTap.bind(this))),this.register(d(e,"touchend","img",this.stopWaitingForLongTap.bind(this))),this.register(d(e,"touchmove","img",this.stopWaitingForLongTap.bind(this))))}storeLastHoveredLinkInEditor(e){var p;let n=(p=this.app.workspace.getActiveViewOfType(s.MarkdownView))==null?void 0:p.editor;if(!n)return;let t=n.posAtMouse(e),o=n.getClickableTokenAt(t);o&&(this.lastHoveredLinkTarget=o.text)}storeLastHoveredLinkInPreview(e,n){this.lastHoveredLinkTarget=n.getAttribute("data-href")}showOpenPdfMenu(e,n){var m;if(!this.settings.pdfMenu||this.openPdfMenu||this.preventReopenPdfMenu)return;let t=n.getBoundingClientRect();if(t.left+w<e.x&&e.x<t.right-w&&t.top+w<e.y&&e.y<t.bottom-w)return;let o=n.closest(".pdf-embed"),p;if(o){let i;o.hasClass("popover")?i=this.lastHoveredLinkTarget:i=(m=o.getAttr("src"))!=null?m:this.lastHoveredLinkTarget,i=i==null?void 0:i.replace(/#page=\d+$/,"");let c=this.app.workspace.getActiveFile().path;p=this.app.metadataCache.getFirstLinkpathDest(i,c)}else p=this.app.workspace.getActiveFile();let l=new s.Menu;this.registerEscapeButton(l),l.onHide(()=>this.openPdfMenu=null),l.addItem(i=>i.setIcon("pdf-file").setTitle("Open PDF externally").onClick(async()=>{this.preventReopenPdfMenu=!0,setTimeout(()=>{this.preventReopenPdfMenu=!1},P),this.hideOpenPdfMenu(),s.Platform.isDesktop?await this.app.openWithDefaultApp(p.path):await this.app.vault.adapter.open(p.path)})),l.showAtMouseEvent(e),this.openPdfMenu=l,setTimeout(this.hideOpenPdfMenu.bind(this),P)}registerEscapeButton(e,n=activeDocument){e.register(d(n,"keydown","*",t=>{t.key==="Escape"&&(t.preventDefault(),t.stopPropagation(),e.hide())}))}hideOpenPdfMenu(){this.openPdfMenu&&this.openPdfMenu.hide()}startWaitingForLongTap(e,n){this.longTapTimeoutId?(clearTimeout(this.longTapTimeoutId),this.longTapTimeoutId=null):e.targetTouches.length==1&&(this.longTapTimeoutId=window.setTimeout(this.processLongTap.bind(this,e,n),W))}stopWaitingForLongTap(){this.longTapTimeoutId&&(clearTimeout(this.longTapTimeoutId),this.longTapTimeoutId=null)}async processLongTap(e,n){e.stopPropagation(),this.longTapTimeoutId=null;let t=this.app.vault.adapter,o=window,p=t.getFullPath(""),m=o.WEBVIEW_SERVER_URL+C+p;if(n.src.startsWith(m)){let i=n.src.replace(m,""),c=decodeURIComponent(i);await t.open(c)}else try{let i=await g(n.src);if(!i.type.startsWith("image/")){new s.Notice(`Unsupported mime type ${i.type}`);return}let c=i.type.replace("image/",""),h=`/.temp-${window.URL.createObjectURL(new Blob([])).split("/").pop()}.${c}`,I=await i.arrayBuffer();await t.writeBinary(h,I),setTimeout(()=>t.remove(h),H),new s.Notice("Image was temporarily saved and will be removed in 1 minute"),await t.open(h)}catch(i){new s.Notice("Cannot open image")}}onClickImage(e){let n=e.target;if(!(n instanceof HTMLImageElement)){console.error("imgElement is supposed to be a HTMLImageElement. imgElement:"),console.error(n);return}e.preventDefault();let t=new s.Menu,o=n.currentSrc,p=new URL(o),l=p.protocol;switch(l){case"app:":case"data:":case"http:":case"https:":if(t.addItem(m=>m.setIcon("image-file").setTitle("Copy image to clipboard").onClick(async()=>{try{let i=await g(o),c=new ClipboardItem({[i.type]:i});await navigator.clipboard.write([c]),new s.Notice("Image copied to the clipboard!",D)}catch(i){new s.Notice("Error, could not copy the image!")}})),l==="app:"&&s.Platform.isDesktop){let i=this.app.vault.adapter.getFilePath("").replace("file://",""),c=p.pathname;if(c.startsWith(i)){let u=c.replace(i,"");u=decodeURI(u),t.addItem(h=>h.setIcon("arrow-up-right").setTitle("Open in default app").onClick(()=>this.app.openWithDefaultApp(u))),t.addItem(h=>h.setIcon("arrow-up-right").setTitle(s.Platform.isMacOS?"Reveal in finder":"Show in system explorer").onClick(()=>{this.app.showInFolder(u)})),t.addItem(h=>h.setIcon("folder").setTitle("Reveal file in navigation").onClick(()=>{let I=this.app.vault.getFileByPath(u.substring(1));this.app.internalPlugins.getEnabledPluginById("file-explorer").revealInFolder(I)}))}}break;default:new s.Notice(`no handler for ${l} protocol`);return}this.registerEscapeButton(t),t.showAtPosition({x:e.pageX,y:e.pageY}),this.app.workspace.trigger("copy-url-in-preview:contextmenu",t)}};
